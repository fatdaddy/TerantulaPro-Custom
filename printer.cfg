[include mainsail.cfg]
[include fluidd.cfg]
[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT



# Support for the green Tevo Tarantula Pro. To use this config, the firmware
# should be compiled for the AVR atmega2560.
# Note that this config file is for the "old green" Tarantula pro, with a
# MKS Gen_l 8-bit board.
# It _will not_ work out of the box for the "new orange" Tarantula pro with a
# MKS Sgen_l 32-bit board.

# See docs/Config_Reference.md for a description of parameters.


#[virtual_sdcard]
#path:


[stepper_x]
step_pin: PF0
dir_pin: !PF1
enable_pin: !PD7
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PE5
position_endstop: -2
position_max: 220
position_min: -2
homing_speed: 75.0

[tmc2209 stepper_x]
uart_pin: PG1
#tx_pin:
#select_pins:
#interpolate: False
run_current: .9
#hold_current: 
#sense_resistor: 0.110
#stealthchop_threshold: 0
#   See the "tmc2208" section for the definition of these parameters.
#uart_address:
#   The address of the TMC2209 chip for UART messages (an integer
#   between 0 and 3). This is typically used when multiple TMC2209
#   chips are connected to the same UART pin. The default is zero.
#driver_IHOLDDELAY: 8
#driver_TPOWERDOWN: 20
#driver_TBL: 2
#driver_TOFF: 3
#driver_HEND: 0
#driver_HSTRT: 5
#driver_PWM_AUTOGRAD: True
#driver_PWM_AUTOSCALE: True
#driver_PWM_LIM: 12
#driver_PWM_REG: 8
#driver_PWM_FREQ: 1
#driver_PWM_GRAD: 14
#driver_PWM_OFS: 36
#driver_SGTHRS: 0
#   Set the given register during the configuration of the TMC2209
#   chip. This may be used to set custom motor parameters. The
#   defaults for each parameter are next to the parameter name in the
#   above list.
#diag_pin:
#   The micro-controller pin attached to the DIAG line of the TMC2209
#   chip. The pin is normally prefaced with "^" to enable a pullup.
#   Setting this creates a "tmc2209_stepper_x:virtual_endstop" virtual
#   pin which may be used as the stepper's endstop_pin. Doing this
#   enables "sensorless homing". (Be sure to also set driver_SGTHRS to
#   an appropriate sensitivity value.) The default is to not enable
#   sensorless homing.

[stepper_y]
step_pin: PF6
dir_pin: PF7
enable_pin: !PF2
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PJ1
position_endstop: 0
position_max: 220
homing_speed: 75.0

[tmc2209 stepper_y]
uart_pin: PF5
#tx_pin:
#select_pins:
#interpolate: False
run_current: .9
#hold_current: .5
#sense_resistor: 0.110
#stealthchop_threshold: 0
#   See the "tmc2208" section for the definition of these parameters.
#uart_address:
#   The address of the TMC2209 chip for UART messages (an integer
#   between 0 and 3). This is typically used when multiple TMC2209
#   chips are connected to the same UART pin. The default is zero.
#driver_IHOLDDELAY: 8
#driver_TPOWERDOWN: 20
#driver_TBL: 2
#driver_TOFF: 3
#driver_HEND: 0
#driver_HSTRT: 5
#driver_PWM_AUTOGRAD: True
#driver_PWM_AUTOSCALE: True
#driver_PWM_LIM: 12
#driver_PWM_REG: 8
#driver_PWM_FREQ: 1
#driver_PWM_GRAD: 14
#driver_PWM_OFS: 36
#driver_SGTHRS: 0
#   Set the given register during the configuration of the TMC2209
#   chip. This may be used to set custom motor parameters. The
#   defaults for each parameter are next to the parameter name in the
#   above list.
#diag_pin:
#   The micro-controller pin attached to the DIAG line of the TMC2209
#   chip. The pin is normally prefaced with "^" to enable a pullup.
#   Setting this creates a "tmc2209_stepper_x:virtual_endstop" virtual
#   pin which may be used as the stepper's endstop_pin. Doing this
#   enables "sensorless homing". (Be sure to also set driver_SGTHRS to
#   an appropriate sensitivity value.) The default is to not enable
#   sensorless homing.


[stepper_z]
step_pin: PL3
dir_pin: PL1
enable_pin: !PK0
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 245
position_min: -2.0
homing_speed: 50.0 

[tmc2209 stepper_z]
uart_pin: PL7
#tx_pin:
#select_pins:
#interpolate: False
run_current: 1.1
#hold_current: .5
#sense_resistor: 0.110
#stealthchop_threshold: 0
#   See the "tmc2208" section for the definition of these parameters.
#uart_address:
#   The address of the TMC2209 chip for UART messages (an integer
#   between 0 and 3). This is typically used when multiple TMC2209
#   chips are connected to the same UART pin. The default is zero.
#driver_IHOLDDELAY: 8
#driver_TPOWERDOWN: 20
#driver_TBL: 2
#driver_TOFF: 3
#driver_HEND: 0
#driver_HSTRT: 5
#driver_PWM_AUTOGRAD: True
#driver_PWM_AUTOSCALE: True
#driver_PWM_LIM: 12
#driver_PWM_REG: 8
#driver_PWM_FREQ: 1
#driver_PWM_GRAD: 14
#driver_PWM_OFS: 36
#driver_SGTHRS: 0
#   Set the given register during the configuration of the TMC2209
#   chip. This may be used to set custom motor parameters. The
#   defaults for each parameter are next to the parameter name in the
#   above list.
#diag_pin:
#   The micro-controller pin attached to the DIAG line of the TMC2209
#   chip. The pin is normally prefaced with "^" to enable a pullup.
#   Setting this creates a "tmc2209_stepper_x:virtual_endstop" virtual
#   pin which may be used as the stepper's endstop_pin. Doing this
#   enables "sensorless homing". (Be sure to also set driver_SGTHRS to
#   an appropriate sensitivity value.) The default is to not enable
#   sensorless homing.



# Enable for dual-z addon
#[stepper_z1]
#step_pin: PC1
#dir_pin: PC3
#enable_pin: !PC7
#microsteps: 16
#rotation_distance: 8



[extruder]
step_pin: PA4
dir_pin: PA6
enable_pin: !PA2
microsteps: 16
rotation_distance: 8.10
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PB4
sensor_type: ATC Semitec 104GT-2
sensor_pin: PK5
control: pid
pid_Kp: 24.069
pid_Ki: 1.016
pid_Kd: 142.612
min_temp: 1
max_temp: 250

[tmc2209 extruder]
uart_pin: PL5
#tx_pin:
#select_pins:
#interpolate: False
run_current: 1.0
#hold_current: .5
#sense_resistor: 0.110
#stealthchop_threshold: 0
#   See the "tmc2208" section for the definition of these parameters.
#uart_address:
#   The address of the TMC2209 chip for UART messages (an integer
#   between 0 and 3). This is typically used when multiple TMC2209
#   chips are connected to the same UART pin. The default is zero.
#driver_IHOLDDELAY: 8
#driver_TPOWERDOWN: 20
#driver_TBL: 2
#driver_TOFF: 3
#driver_HEND: 0
#driver_HSTRT: 5
#driver_PWM_AUTOGRAD: True
#driver_PWM_AUTOSCALE: True
#driver_PWM_LIM: 12
#driver_PWM_REG: 8
#driver_PWM_FREQ: 1
#driver_PWM_GRAD: 14
#driver_PWM_OFS: 36
#driver_SGTHRS: 0
#   Set the given register during the configuration of the TMC2209
#   chip. This may be used to set custom motor parameters. The
#   defaults for each parameter are next to the parameter name in the
#   above list.
#diag_pin:
#   The micro-controller pin attached to the DIAG line of the TMC2209
#   chip. The pin is normally prefaced with "^" to enable a pullup.
#   Setting this creates a "tmc2209_stepper_x:virtual_endstop" virtual
#   pin which may be used as the stepper's endstop_pin. Doing this
#   enables "sensorless homing". (Be sure to also set driver_SGTHRS to
#   an appropriate sensitivity value.) The default is to not enable
#   sensorless homing.



[heater_bed]
heater_pin: PH5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK6
control: watermark
min_temp: 0
max_temp: 110



[fan]
pin: PH6


[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0


[printer]
kinematics: cartesian
max_velocity: 400
max_accel: 3000
max_z_velocity: 50
max_z_accel: 100


[heater_fan nozzle_fan]
pin: PH4



[display]
lcd_type: uc1701
cs_pin: PA3
a0_pin: PA5
encoder_pins: ^!PC6, ^!PC4
click_pin: ^!PC2
kill_pin: !PG0
menu_reverse_navigation: true

#[bltouch]
#sensor_pin: ^PD3
#control_pin: PB5
#x_offset: -34
#y_offset: -6
#z_offset: 0.0
#samples: 2
#speed: 10

[probe]
pin: !PD3
x_offset: 65.0
y_offset: -6.0
#z_offset: 2.499
speed: 5.0
samples: 2
sample_retract_dist: 1.0
lift_speed: 10
samples_result: average
samples_tolerance: 0.100
samples_tolerance_retries: 0
#activate_gcode:
#deactivate_gcode:

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 45, 25
mesh_max: 205, 198
probe_count: 5, 3
mesh_pps: 2, 3
algorithm: bicubic
bicubic_tension: 0.2
move_check_distance: 3
split_delta_z: .025
fade_start: 1
fade_end: 10
fade_target: 0

#[bed_screws]
#screw1:
#screw2:
#screw3:
#screw4:

[duplicate_pin_override]
pins: PD3



[safe_z_home]
home_xy_position: 115, 100 # ^Change coordinates to the center of your print bed
speed: 50
z_hop: 5                 # Move up 10mm
z_hop_speed: 5
move_to_previous: False

[endstop_phase]


[display_status]


[firmware_retraction]

#[idle_timeout]
#SET_IDLE_TIMEOUT [TIMEOUT=<900>]

[gcode_macro START_PRINT] 
gcode: 
    # Use absolute coordinates 
    G90 
    # Home the printer 
    G28 
    # Reset extruder 
    G92 E0
    # Heat the bed and wait
    M190 S70
    #BED_MESH_CALIBRATE PROFILE=mesh1 METHOD=automatic

    BED_MESH_PROFILE LOAD=mesh2
    # Move to wait position 
    G1 X0 Y0 Z50 F4000.0  
    # Set and wait for nozzle to reach temperature 
    M109 S210
    # Move Z axis up 
    G1 Z2.0 F3000 
    # Move to start position 
    G1 X10.1 Y20 Z0.28 F5000.0 
    # Draw the first line
    G1 X10.1 Y200.0 Z0.28 F1500.0 E15 
    # Move to the side
    G1 X10.4 Y200.0 Z0.28 F5000.0 
    # Draw the second line 
    G1 X10.4 Y20 Z0.28 F1500.0 E30 
    # Reset extruder 
    G92 E0
    # Move Z Axis up little to prevent scratching of Heat Bed
    G1 Z2.0 F3000
    # Move over to prevent blob squish
    G1 X5 Y20 Z0.3 F5000.0

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    # Disable steppers
    M84


 
[pause_resume]


[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[input_shaper]

#[exclude_object]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*#
#*# [probe]
#*# z_offset = 1.769
#*#
#*# [bed_mesh <mesh1>]
#*# version = 1
#*# points =
#*# 	0.099000, 0.074000, 0.024000, -0.076000, -0.201000
#*# 	-0.076000, -0.026000, -0.051000, -0.101000, -0.226000
#*# 	0.149000, 0.109000, 0.049000, -0.076000, -0.201000
#*# x_count = 5
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 3
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 220.0
#*# min_y = 15.0
#*# max_y = 220.0
#*#
#*# [endstop_phase stepper_z]
#*# trigger_phase = 14/64
#*#
#*# [bed_mesh <mesh2>]
#*# version = 1
#*# points =
#*# 	0.099000, 0.134000, 0.149000, 0.124000, 0.089000
#*# 	0.019000, 0.039000, 0.049000, 0.009000, -0.076000
#*# 	0.149000, 0.169000, 0.174000, 0.159000, 0.114000
#*# x_count = 5
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 3
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 45.0
#*# max_x = 205.0
#*# min_y = 25.0
#*# max_y = 198.0
